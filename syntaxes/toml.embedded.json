{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "comment": "This file has been automatically generated by syntax_assembler.js\nDO NOT HAND EDIT IT - changes will be lost.",
  "injectionSelector": "L:source.toml -string -comment",
  "scopeName": "source.toml.embedded.codeblock",
  "patterns": [
    {
      "include": "#triple_quoted_strings"
    }
  ],
  "repository": {
    "triple_quoted_strings": {
      "comment": "These patterns all match toml triple-quoted strings and select one language.The syntax is injected into https://github.com/oovm/vscode-toml/blob/master/extension/toml.tmLanguage.json",
      "patterns": [
        {
          "comment": "Batch-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:rem|@rem|::bat) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.bat.toml source.batchfile",
          "patterns": [
            {
              "include": "source.batchfile"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "C++-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://cpp|//c\\+\\+) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.cpp.toml source.cpp",
          "patterns": [
            {
              "include": "source.cpp"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "CSS-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:/\\*css) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.css.toml source.css",
          "patterns": [
            {
              "include": "source.css"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "HTML-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:<!DOCTYPE|<html|<!--html) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.html.toml text.html.derivative",
          "patterns": [
            {
              "include": "text.html.derivative"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "INI-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:;ini) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.ini.toml source.ini",
          "patterns": [
            {
              "include": "source.ini"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Javascript-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://js) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.javascript.toml source.js",
          "patterns": [
            {
              "include": "source.js"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "JSONC-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://jsonc) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.jsonc.toml source.json.comments",
          "patterns": [
            {
              "include": "source.json.comments"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Python-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#py) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.python.toml source.python",
          "patterns": [
            {
              "include": "source.python"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Shell-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#sh|\\#bash|\\#shell|\\#!/bin/sh|\\#!/bin/bash|\\#!/usr/bin/env/sbash) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.shellscript.toml source.shell",
          "patterns": [
            {
              "include": "source.shell"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "SQL-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:--sql) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.sql.toml source.sql",
          "patterns": [
            {
              "include": "source.sql"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "TOML-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#toml) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.toml.toml source.toml",
          "patterns": [
            {
              "include": "source.toml"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "XML-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:<\\?xml|<\\?/sxml|<!--xml) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.xml.toml text.xml",
          "patterns": [
            {
              "include": "text.xml"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "YAML-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#yaml) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.yaml.toml source.yaml",
          "patterns": [
            {
              "include": "source.yaml"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "C-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:/\\*c) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.c.toml source.c",
          "patterns": [
            {
              "include": "source.c"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "HLSL-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://hlsl) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.hlsl.toml source.hlsl",
          "patterns": [
            {
              "include": "source.hlsl"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "GLSL-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://glsl) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.glsl.toml source.glsl",
          "patterns": [
            {
              "include": "source.glsl"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Metal-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://metal) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.metal.toml source.metal",
          "patterns": [
            {
              "include": "source.metal"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "WGSL-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://wgsl) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.wgsl.toml source.wgsl",
          "patterns": [
            {
              "include": "source.wgsl"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Lua-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:--lua) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.lua.toml source.lua",
          "patterns": [
            {
              "include": "source.lua"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Makefile-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#make|\\#makefile|\\#!/usr/bin/make) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.makefile.toml source.makefile",
          "patterns": [
            {
              "include": "source.makefile"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "GraphQL-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#graphql|\\#gql) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.graphql.toml source.graphql",
          "patterns": [
            {
              "include": "source.graphql"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "TypeScript-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://ts|//typescript) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.typescript.toml source.ts",
          "patterns": [
            {
              "include": "source.ts"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "LaTeX-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:%latex) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.latex.toml text.tex.latex",
          "patterns": [
            {
              "include": "text.tex.latex"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "TeX-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:%tex) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.tex.toml text.tex",
          "patterns": [
            {
              "include": "text.tex"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Graphviz-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://graphviz|//dot) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.dot.toml source.dot",
          "patterns": [
            {
              "include": "source.dot"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "ARM Assembly-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:@arm|;arm) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.arm.toml source.arm",
          "patterns": [
            {
              "include": "source.arm"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "x86 / x64 Assembly-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:;x86|;x86_64|x64) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.asm-intel-x86-generic.toml source.asm.x86_64",
          "patterns": [
            {
              "include": "source.asm.x86_64"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Handlebars-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:/\\*hbs|//hbs|/\\*handlebars|//handlebars) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.handlebars.toml text.html.handlebars",
          "patterns": [
            {
              "include": "text.html.handlebars"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "PowerShell-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:\\#ps1|\\#powershell) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.powershell.toml source.powershell",
          "patterns": [
            {
              "include": "source.powershell"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Markdown-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i:<!--md|<!--markdown) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.Markdown.toml text.html.markdown",
          "patterns": [
            {
              "include": "text.html.markdown"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        },
        {
          "comment": "Go-formatted triple-quoted strings",
          "name": "string.quoted.multi.embedded.toml",
          "begin": "(?x)\n(''') \n(?= (?i://go|//golang) \\b )",
          "end": "(\\1)",
          "contentName": "meta.embedded.block.go.toml source.go",
          "patterns": [
            {
              "include": "source.go"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.toml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.toml"
            }
          }
        }
      ]
    }
  }
}